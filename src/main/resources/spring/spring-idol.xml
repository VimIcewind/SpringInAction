<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- 采用注解的方式注入 Bean -->
    <context:annotation-config />

    <context:component-scan base-package="com.vimemacs.springidol">
        <context:include-filter type="assignable" expression="com.vimemacs.springidol.Instrument"/>
        <context:exclude-filter type="annotation" expression="com.vimemacs.springidol.SkipIT"/>
    </context:component-scan>

    <bean id="duke" class="com.vimemacs.springidol.Juggler">
        <constructor-arg value="15"/>
    </bean>

    <bean id="sonnet29" class="com.vimemacs.springidol.Sonnet29"/>

    <bean id="poeticDuke" class="com.vimemacs.springidol.PoeticJuggler">
        <constructor-arg value="15"/>
        <constructor-arg>
            <bean class="com.vimemacs.springidol.Sonnet29"/>
        </constructor-arg>
    </bean>

    <bean id="dukeConstructor" class="com.vimemacs.springidol.PoeticJuggler" autowire="constructor"/>

    <bean id="dukeAutodetect" class="com.vimemacs.springidol.PoeticJuggler" autowire="autodetect">
        <property name="poem" ref="sonnet29"/>
    </bean>

    <bean id="theStage" class="com.vimemacs.springidol.Stage" factory-method="getInstance"/>

    <bean id="ticket" class="com.vimemacs.springidol.Ticket" scope="prototype"/>

    <bean id="ticket1" class="com.vimemacs.springidol.Ticket"/>

    <bean id="auditorium" class="com.vimemacs.springidol.Auditorium" init-method="turnOnLights" destroy-method="turnOffLights"/>

    <bean id="saxophone" class="com.vimemacs.springidol.Saxophone" autowire-candidate="false"/>

    <bean id="piano" class="com.vimemacs.springidol.Piano" autowire-candidate="false"/>

    <bean id="guitar" class="com.vimemacs.springidol.Guitar" autowire-candidate="false"/>

    <bean id="cymbal" class="com.vimemacs.springidol.Cymbal" autowire-candidate="false"/>

    <bean id="harmonica" class="com.vimemacs.springidol.Harmonica" autowire-candidate="false"/>

    <bean id="kenny" class="com.vimemacs.springidol.Instrumentalist">
        <property name="song" value="Jingle Bells"/>
        <property name="age" value="37"/>
        <!--<property name="instrument" ref="saxophone"/>-->
    </bean>

    <bean id="kennyp" class="com.vimemacs.springidol.Instrumentalist" p:song="Jingle Bells" p:instrument-ref="saxophone"/>

    <bean id="instrument" class="com.vimemacs.springidol.Saxophone"/>

    <bean id="kennyAutowiringByName" class="com.vimemacs.springidol.Instrumentalist" autowire="byName">
        <property name="song" value="Jingle Bells"/>
        <property name="age" value="37"/>
    </bean>

    <bean id="kennyAutowiringByType" class="com.vimemacs.springidol.Instrumentalist" autowire="byType">
        <property name="song" value="Jingle Bells"/>
        <property name="age" value="37"/>
    </bean>

    <bean id="kennyMixing" class="com.vimemacs.springidol.Instrumentalist" autowire="byType">
        <property name="song" value="Jingle Bells"/>
        <property name="age" value="37"/>
        <property name="instrument" ref="saxophone"/>
    </bean>

    <bean id="eddie" class="com.vimemacs.springidol.Instrumentalist">
        <property name="song" value="Jingle Bells"/>
        <property name="age" value="27"/>
    </bean>

    <bean id="hank" class="com.vimemacs.springidol.OneManBand">
        <property name="instruments">
            <list>
                <ref bean="guitar"/>
                <ref bean="cymbal"/>
                <ref bean="harmonica"/>
            </list>
        </property>
    </bean>

    <bean id="hankMap" class="com.vimemacs.springidol.OneManBandMap">
        <property name="instruments">
            <map>
                <entry key="GUITAR" value-ref="guitar"/>
                <entry key="CYMBAL" value-ref="cymbal"/>
                <entry key="HARMONICA" value-ref="harmonica"/>
            </map>
        </property>
    </bean>

    <bean id="hankProp" class="com.vimemacs.springidol.OneManBandProperties">
        <property name="instruments">
            <props>
                <prop key="GUITAR">STRUM STRUM STRUM</prop>
                <prop key="CYMBAL">CRASH CRASH CRASH</prop>
                <prop key="HARMONICA">HUM HUM HUM</prop>
            </props>
        </property>
    </bean>

    <bean id="songSelector" class="com.vimemacs.springidol.SongSelector">
        <constructor-arg value="My Love"/>
    </bean>

    <bean id="carl" class="com.vimemacs.springidol.Instrumentalist">
        <property name="song" value="#{songSelector.selectSong()?.toUpperCase()}"/>
        <property name="instrument" value="#{kenny.instrument}"/>
    </bean>

    <bean id="criticismEngine" class="com.vimemacs.springidol.CriticismEngineImpl">
        <property name="criticismPool">
            <list>
                <value>I'm not being rude, but that was appalling.</value>
                <value>You may be the least talented person in this show.</value>
                <value>Do everyone a favor and keep your day job.</value>
            </list>
        </property>
    </bean>

    <!--
    <bean class="com.vimemacs.springidol.JudgeAspect" factory-method="aspectOf">
        <property name="criticismEngine" ref="criticismEngine"/>
    </bean>
    -->

    <aop:aspectj-autoproxy/>

    <aop:config proxy-target-class="true"/>

    <!--
    <aop:config proxy-target-class="true">
        <aop:aspect ref="audience">
            <aop:pointcut id="performance" expression="execution(* com.vimemacs.springidol.Performer.perform(..))"/>
            <aop:before pointcut-ref="performance" method="takeSeats"/>
            <aop:before pointcut-ref="performance" method="turnOffCellPhones"/>
            <aop:after-returning pointcut-ref="performance" method="applaud"/>
            <aop:after-throwing pointcut-ref="performance" method="demandRefund"/>
        </aop:aspect>
    </aop:config>

    <aop:config proxy-target-class="true">
        <aop:aspect ref="audience">
            <aop:pointcut id="performance2" expression="execution(* com.vimemacs.springidol.Performer.perform(..))"/>
            <aop:around pointcut-ref="performance2" method="watchPerformance"/>
        </aop:aspect>
    </aop:config>

    <aop:config>
        <aop:aspect ref="magician">
            <aop:pointcut id="thinking" expression="execution(* com.vimemacs.springidol.Thinker.thinkOfSomething(String)) and args(thoughts)"/>
            <aop:before pointcut-ref="thinking" method="interceptThoughts" arg-names="thoughts"/>
        </aop:aspect>
    </aop:config>

    <aop:config>
        <aop:aspect>
            <aop:declare-parents types-matching="com.vimemacs.springidol.Performer+"
                     implement-interface="com.vimemacs.springidol.Contestant"
                     default-impl="com.vimemacs.springidol.GraciousContestant"/>
        </aop:aspect>
    </aop:config>

    <bean id="contestantDelegate" class="com.vimemacs.springidol.GraciousContestant"/>

    <aop:config>
        <aop:aspect>
            <aop:declare-parents types-matching="com.vimemacs.springidol.Performer+"
                     implement-interface="com.vimemacs.springidol.Contestant"
                     delegate-ref="contestantDelegate"/>
        </aop:aspect>
    </aop:config>
    -->
</beans>
